#!/bin/bash


#This script is going to calculate IPv4 addresses
# it will consist of finding first host, last host, broadcast ID, network ID.
# subnet mask 

#check if they have bc installed if not return please isntall bc and tell them the command

#is awk downloaded?


bruh=( $1 )
if [[ ! -n $1 ]]; then
	echo "your argument passed is not a string"
	exit 1
fi

#actually a scary crazy regular expression
formatted='^((25[0-5]|2[0-4][0-9]|1[0-9]{2}|[1-9]?[0-9])\.){3}((25[0-5]|2[0-4][0-9]|1[0-9]{2}|[0-9]?[0-9]))/(3[0-2]|[1-2]?[0-9])$'

if [[ ! $bruh =~ $formatted ]]; then
	echo "Error: your input does not match that of an IPv4 address 
example = 10.20.30.40/20"
	exit 1
fi


zerosubnet=""


stringwithDotslash="$bruh"

spacedString=${stringwithDotslash//./ }
#removed slash from subnet not array
RemovedSlash=${spacedString//// }
# array now
ipaddress=( $RemovedSlash )
subnetmaskslash=${ipaddress[-1]}

unset 'ipaddress[-1]'
echo "${subnetmaskslash}"
echo "${ipaddress[@]}"

numberofZeros=$(( 32-$subnetmaskslash ))
#how come this dosent work
#subnetmask="^([1]){${subnetmaskslash}}([0]){${numberofZeros}}$"


#making the 1 portions
for ((i = 1 ; i <= $subnetmaskslash ; i++)); do
	zerosubnet+="1"
done

#add the zeros to make it 32 bit
for ((i = 1 ; i <= numberofZeros ; i++)); do
	zerosubnet+="0"
done


for i in ${ipaddress[@]}; do
	echo "$i"
	singleDEC=$(printf '%08d\n' $(echo "obase=2;${i}" | bc -l))
	echo "$singleDEC"
done



